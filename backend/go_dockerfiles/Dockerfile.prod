# syntax=docker/dockerfile:1

# Build the application from source
FROM golang:1.19 AS build-stage

# Set the working directory inside the container
WORKDIR /app

# Copy go.mod and go.sum files for dependency management
COPY go.mod go.sum ./
RUN go mod download

# Copy all the Go source files
COPY *.go ./

# Build the Go binary (this is the compiled version)
RUN CGO_ENABLED=0 GOOS=linux go build -o /app/myapp

# Run the tests in the container
FROM build-stage AS run-test-stage
RUN go run ./migratecmd up 

# Use a lean, minimal image for the final release
FROM gcr.io/distroless/base-debian11 AS build-release-stage

# Set the working directory inside the lean image
WORKDIR /

# Copy the compiled Go binary from the build stage
COPY --from=build-stage /app/myapp /app/myapp

# Expose the port the app will listen on (update if you need a different port)
EXPOSE 8080

# Run the application as a non-root user for security
USER nonroot:nonroot

# Copy and set the entrypoint script (this will handle migration and app startup)
COPY ./entrypoint.dev.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Set the entrypoint to the script
ENTRYPOINT ["/entrypoint.sh"]
