# Stage 1: Build the Angular application
FROM node:22.11-alpine AS build

# Add package manager configuration for better reliability
RUN npm config set registry https://registry.npmjs.org/ \
    && npm config set fetch-retry-mintimeout 20000 \
    && npm config set fetch-retry-maxtimeout 120000

# Setup the working directory
WORKDIR /usr/src/app

# Copy package files
COPY package.json package-lock.json ./



# Install dependencies with improved reliability flags
RUN yarn add leaflet @types/leaflet && \
    yarn install --frozen-lockfile --network-timeout=1000000


# Copy the rest of the application
COPY . .

# Build Angular application in production mode
RUN yarn build --configuration=production

# Stage 2: Serve the application using Nginx
FROM nginx:alpine

COPY ./nginx_config/nginx.dev.conf /etc/nginx/nginx.conf

# Copy built Angular app files to Nginx HTML folder
COPY --from=build /usr/src/app/dist/frontend/browser /usr/share/nginx/html

# # Add Nginx configuration (optional but recommended)
# COPY nginx.conf /etc/nginx/conf.d/default.conf

# # Expose port 80
# EXPOSE 80

# # Start Nginx in the foreground
# CMD ["nginx", "-g", "daemon off;"]
